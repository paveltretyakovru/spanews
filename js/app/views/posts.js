// Generated by CoffeeScript 1.10.0
define(function(require) {
  'use strict';
  var Collection, ItemView, Marionette, Model, PostTemplate, PostsCollectionView, TemplateItem;
  Marionette = require('marionette');
  TemplateItem = require('text!tmpls/post_item.tpl');
  PostTemplate = require('text!tmpls/post_content.tpl');
  Collection = Backbone.Collection.extend();
  Model = Backbone.Model.extend();
  ItemView = Marionette.ItemView.extend({
    template: TemplateItem,
    ui: {
      'linksShowPost': '.show-post-content'
    },
    events: {
      'click @ui.linksShowPost': 'showPostContent'
    },
    showPostContent: function(e) {
      $('#region-text').html(_.template(PostTemplate)(this.model.toJSON()));
      $('#content').carousel('next');
      return e.preventDefault();
    }
  });
  PostsCollectionView = Marionette.CollectionView.extend({
    debug: true,
    childView: ItemView,
    initialize: function() {
      if (this.debug) {
        console.log('Init posts collection view');
      }
      this.model = new Model();
      this.collection = new Collection();
      this.model.on('change:query', this.fetchData, this);
      return this.fetchData();
    },
    fetchData: function() {
      if (!this.model.get('query')) {
        this.model.set('query', 'путин');
      }
      return $.ajax({
        url: 'https://ajax.googleapis.com/ajax/services/search/news',
        data: {
          v: '1.0',
          q: this.model.get('query')
        },
        dataType: 'jsonp'
      }).done((function(_this) {
        return function(data) {
          if (_this.debug) {
            console.log('Data loaded', data.responseData.results);
          }
          return _this.collection.reset(data.responseData.results);
        };
      })(this));
    }
  });
  return PostsCollectionView;
});
